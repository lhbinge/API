g <- g + theme(legend.position="none")
g <- g + theme(axis.text.x = element_text(size=14))
g
g <- ggplot(slavedata, aes(x=Age, y=Price, colour = Region))
g <- g + geom_point(size = 2, alpha = 0.5)
g <- g + ylab("Price")
g <- g + xlab("Age")
#g <- g + theme(legend.position="none")
g <- g + stat_smooth(method = "gam", formula=y~s(x,bs="cs"), colour="red")
g
g <- ggplot(slavedata, aes(x=Origin, y=Price, colour = Origin))
g <- g + geom_point(size = 2, alpha = 1)
g <- g + ylab("Price")
g <- g + xlab("Origin")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(axis.text.x = element_text(size=14))
g <- g + theme(legend.position="none")
g
g <- ggplot(slavedata, aes(x=Gender, y=Price, fill = Gender))
g <- g + stat_boxplot(geom = "errorbar", stat_params = list(width = 0.5))
g <- g + geom_boxplot() + guides(fill=FALSE)
g <- g + ylab("Price")
g <- g + xlab("Gender")
g <- g + theme(axis.text.x = element_text(size=14))
g <- g + theme(legend.position="none")
g
g <- ggplot(slavedata, aes(x=Gender, y=Price, fill = Gender))
g <- g + geom_violin() #+ guides(fill=FALSE)
g <- g + geom_boxplot() + guides(fill=FALSE)
g <- g + stat_boxplot(geom = "errorbar", stat_params = list(width = 0.5))
g <- g + ylab("Price")
g <- g + xlab("Gender")
g <- g + theme(axis.text.x = element_text(size=14))
g <- g + theme(legend.position="none")
g
g <- ggplot(slavedata, aes(x=Gender, y=Price, fill = Gender))
g <- g + geom_violin() #+ guides(fill=FALSE)
g <- g + geom_boxplot(width=0.3) + guides(fill=FALSE)
g <- g + stat_boxplot(geom = "errorbar", stat_params = list(width = 0.5))
g <- g + ylab("Price")
g <- g + xlab("Gender")
g <- g + theme(axis.text.x = element_text(size=14))
g <- g + theme(legend.position="none")
g
g <- ggplot(slavedata, aes(x=Occupation_Cat, y=Price, fill = Occupation_Cat))
g <- g + stat_boxplot(geom = "errorbar", stat_params = list(width = 0.5))
g <- g + geom_boxplot() + guides(fill=FALSE)
g <- g + ylab("Price")
g <- g + xlab("Occupation")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(axis.text.x = element_text(size=14))
g <- g + theme(legend.position="none")
g
g <- ggplot(slavedata, aes(x=Occupation_Cat, y=Price, fill = Occupation_Cat))
g <- g + geom_violin() #+ guides(fill=FALSE)
g <- g + stat_boxplot(geom = "errorbar", stat_params = list(width = 0.3))
g <- g + geom_boxplot(width=0.3) + guides(fill=FALSE)
g <- g + ylab("Price")
g <- g + xlab("Occupation")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(axis.text.x = element_text(size=14))
g <- g + theme(legend.position="none")
g
##===============================================================================================##
## -------------------------------- ART PRICE INDEX ---------------------------------------------##
##===============================================================================================##
##=====================##
## READING IN THE DATA ##
##=====================##
suppressMessages(library(zoo))
suppressMessages(library(ggplot2))
suppressMessages(library(plyr))
suppressMessages(library(dplyr))
suppressMessages(library(reshape2))
suppressMessages(library(stargazer))
suppressMessages(library(micEcon))
suppressMessages(library(quantreg))
suppressMessages(library(McSpatial))
suppressMessages(library(quantmod))
suppressMessages(library(xtable))
suppressMessages(library(scales))
suppressMessages(library(tseries))
suppressMessages(library(urca))
setwd("C:\\Users\\Laurie\\OneDrive\\Documents\\BING\\Art Price Index\\R Code")
artdata <- read.csv("Auction database.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE,
colClasses=c("character","numeric","numeric","numeric","numeric","factor","factor","factor","character",
"factor","factor","factor","character","factor","factor","factor","numeric","character",
"numeric","numeric","numeric","numeric","numeric","numeric"))
##===================##
## CLEANING THE DATA ##
##===================##
artdata$date <- as.Date(artdata$date)
artdata$med_code <- factor(artdata$med_code, labels=c("Drawing", "Watercolour", "Oil", "Acrylic", "Print/Woodcut",
"Mixed Media","Sculpture","Photography", "Other"))
artdata$ah_code <- factor(artdata$ah_code, labels=c("5th Avenue","Ashbeys","Bernardi","Bonhams","Russell Kaplan",
"Stephan Welz","Strauss","Christies"))
artdata$timedummy <- factor(as.yearqtr(artdata$date, "%Y-%m-%d"))
artdata$lnprice <- log(artdata$price)
artdata$lnarea <- log(artdata$area)
artdata$lnarea2 <- artdata$lnarea*artdata$lnarea
#inteaction term: sculptures often only reported with 1 dimension (height)
artdata$lnsculpt_area <- ifelse(artdata$med_code=="Sculpture", artdata$lnarea, 0)
artdata$counter <- as.numeric(artdata$timedummy)
##----------------------
##Rank Artists by Volume
##----------------------
#Rank by Total Volume (all)
rankings <- count(artdata, artist)
rankings$rank_all <- dense_rank(desc(rankings$n))    #rank by density, with no gaps (ties = equal)
rankings$rank_total <- row_number(desc(rankings$n))  #equivalent to rank(ties.method = "first")
rankings$n <- NULL
artdata <- merge(artdata, rankings, by.x="artist", by.y="artist",all.x=TRUE)
#-------------------------------
#Plot turnover by auction house
artplot <- aggregate(artdata$hammer_price, by=list(artdata$year,artdata$ah_code), FUN = sum, na.rm=TRUE)
g <- ggplot(artplot, aes(x=Group.1, y=x,fill=Group.2))
g <- g + geom_bar(stat="identity")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + scale_fill_discrete(name="Auction House")
g <- g + scale_y_continuous(labels=comma)
g <- g + ylab("Turnover (Sum of Hammer Price)")
g <- g + xlab("Date")
g
#Plot total sales and annual median price
artplot1 <- aggregate(artdata$hammer_price, by=list(artdata$year), length)
artplot2 <- aggregate(artdata$hammer_price, by=list(artdata$year), FUN = median, na.rm=TRUE)
artplot <- merge(artplot1, artplot2, by="Group.1",all.x=TRUE)
names(artplot) <- c("Date","Total Sales","Median Price")
artplot <- melt(artplot, id="Date")
g <- ggplot(artplot, aes(x=Date,value,colour=variable,fill=variable))
g <- g + geom_bar(subset=.(variable=="Total Sales"),stat="identity")
g <- g + geom_line(subset=.(variable=="Median Price"),size=1)
g <- g + theme(legend.position="bottom") + theme(legend.title=element_blank())
g
##===============================================================================================##
## -------------------------------- ART PRICE INDEX ---------------------------------------------##
##===============================================================================================##
##=====================##
## READING IN THE DATA ##
##=====================##
suppressMessages(library(zoo))
suppressMessages(library(ggplot2))
suppressMessages(library(plyr))
suppressMessages(library(dplyr))
suppressMessages(library(reshape2))
suppressMessages(library(stargazer))
suppressMessages(library(micEcon))
suppressMessages(library(quantreg))
suppressMessages(library(McSpatial))
suppressMessages(library(quantmod))
suppressMessages(library(xtable))
suppressMessages(library(scales))
suppressMessages(library(tseries))
suppressMessages(library(urca))
setwd("C:\\Users\\Laurie\\OneDrive\\Documents\\BING\\Art Price Index\\R Code")
artdata <- read.csv("Auction database.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE,
colClasses=c("character","numeric","numeric","numeric","numeric","factor","factor","factor","character",
"factor","factor","factor","character","factor","factor","factor","numeric","character",
"numeric","numeric","numeric","numeric","numeric","numeric"))
##===================##
## CLEANING THE DATA ##
##===================##
artdata$date <- as.Date(artdata$date)
artdata$med_code <- factor(artdata$med_code, labels=c("Drawing", "Watercolour", "Oil", "Acrylic", "Print/Woodcut",
"Mixed Media","Sculpture","Photography", "Other"))
artdata$ah_code <- factor(artdata$ah_code, labels=c("5th Avenue","Ashbeys","Bernardi","Bonhams","Russell Kaplan",
"Stephan Welz","Strauss","Christies"))
artdata$timedummy <- factor(as.yearqtr(artdata$date, "%Y-%m-%d"))
artdata$lnprice <- log(artdata$price)
artdata$lnarea <- log(artdata$area)
artdata$lnarea2 <- artdata$lnarea*artdata$lnarea
#inteaction term: sculptures often only reported with 1 dimension (height)
artdata$lnsculpt_area <- ifelse(artdata$med_code=="Sculpture", artdata$lnarea, 0)
artdata$counter <- as.numeric(artdata$timedummy)
##----------------------
##Rank Artists by Volume
##----------------------
#Rank by Total Volume (all)
rankings <- count(artdata, artist)
rankings$rank_all <- dense_rank(desc(rankings$n))    #rank by density, with no gaps (ties = equal)
rankings$rank_total <- row_number(desc(rankings$n))  #equivalent to rank(ties.method = "first")
rankings$n <- NULL
artdata <- merge(artdata, rankings, by.x="artist", by.y="artist",all.x=TRUE)
#-------------------------------
#Plot turnover by auction house
artplot <- aggregate(artdata$hammer_price, by=list(artdata$year,artdata$ah_code), FUN = sum, na.rm=TRUE)
g <- ggplot(artplot, aes(x=Group.1, y=x,fill=Group.2))
g <- g + geom_bar(stat="identity")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + scale_fill_discrete(name="Auction House")
g <- g + scale_y_continuous(labels=comma)
g <- g + ylab("Turnover (Sum of Hammer Price)")
g <- g + xlab("Date")
g
#Plot total sales and annual median price
artplot1 <- aggregate(artdata$hammer_price, by=list(artdata$year), length)
artplot2 <- aggregate(artdata$hammer_price, by=list(artdata$year), FUN = median, na.rm=TRUE)
artplot <- merge(artplot1, artplot2, by="Group.1",all.x=TRUE)
names(artplot) <- c("Date","Total Sales","Median Price")
artplot <- melt(artplot, id="Date")
g <- ggplot(artplot, aes(x=Date,value,colour=variable,fill=variable))
g <- g + geom_bar(subset=.(variable=="Total Sales"),stat="identity")
g <- g + geom_line(subset=.(variable=="Median Price"),size=1)
g <- g + theme(legend.position="bottom") + theme(legend.title=element_blank())
g
summaryfunction <- function(x) {
if( is.numeric(x)!=TRUE) {stop("Supplied X is not numeric")}
mysummary = data.frame("Min." =as.numeric(min(x,na.rm=TRUE)),"1st Qu." = quantile(x,na.rm=TRUE)[2],
"Median" = median(x,na.rm=TRUE),"Mean" = mean(x,na.rm=TRUE),"3rd Qu." = quantile(x,na.rm=TRUE)[4],
"Max." = max(x,na.rm=TRUE),row.names="")
names(mysummary) = c("Min.","1st Qu.","Median","Mean","3rd Qu.","Max.")
return(mysummary)
}
xt <- xtable(summaryfunction(artdata$hammer_price), caption="Descriptive statistics of auction hammer prices")
print(xt, "latex",comment=FALSE, caption.placement = getOption("xtable.caption.placement", "top"))
##===============================================================================================##
## -------------------------------- ART PRICE INDEX ---------------------------------------------##
##===============================================================================================##
##=====================##
## READING IN THE DATA ##
##=====================##
suppressMessages(library(zoo))
suppressMessages(library(ggplot2))
suppressMessages(library(plyr))
suppressMessages(library(dplyr))
suppressMessages(library(reshape2))
suppressMessages(library(stargazer))
suppressMessages(library(micEcon))
suppressMessages(library(quantreg))
suppressMessages(library(McSpatial))
suppressMessages(library(quantmod))
suppressMessages(library(xtable))
suppressMessages(library(scales))
suppressMessages(library(tseries))
suppressMessages(library(urca))
suppressMessages(library(mFilter))
setwd("C:\\Users\\Laurie\\OneDrive\\Documents\\BING\\Art Price Index\\R Code")
artdata <- read.csv("Auction database.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE,
colClasses=c("character","numeric","numeric","numeric","numeric","factor","factor","factor","character",
"factor","factor","factor","character","factor","factor","factor","numeric","character",
"numeric","numeric","numeric","numeric","numeric","numeric"))
##===================##
## CLEANING THE DATA ##
##===================##
artdata$date <- as.Date(artdata$date)
artdata$med_code <- factor(artdata$med_code, labels=c("Drawing", "Watercolour", "Oil", "Acrylic", "Print/Woodcut",
"Mixed Media","Sculpture","Photography", "Other"))
artdata$ah_code <- factor(artdata$ah_code, labels=c("5th Avenue","Ashbeys","Bernardi","Bonhams","Russell Kaplan",
"Stephan Welz","Strauss","Christies"))
artdata$timedummy <- factor(as.yearqtr(artdata$date, "%Y-%m-%d"))
artdata$lnprice <- log(artdata$price)
artdata$lnarea <- log(artdata$area)
artdata$lnarea2 <- artdata$lnarea*artdata$lnarea
#inteaction term: sculptures often only reported with 1 dimension (height)
artdata$lnsculpt_area <- ifelse(artdata$med_code=="Sculpture", artdata$lnarea, 0)
artdata$counter <- as.numeric(artdata$timedummy)
##----------------------
##Rank Artists by Volume
##----------------------
#Rank by Total Volume (all)
rankings <- count(artdata, artist)
rankings$rank_all <- dense_rank(desc(rankings$n))    #rank by density, with no gaps (ties = equal)
rankings$rank_total <- row_number(desc(rankings$n))  #equivalent to rank(ties.method = "first")
rankings$n <- NULL
artdata <- merge(artdata, rankings, by.x="artist", by.y="artist",all.x=TRUE)
#-------------------------------
#Plot total sales by auction house
artplot <- aggregate(artdata$hammer_price, by=list(artdata$year,artdata$ah_code), FUN = length)
g <- ggplot(artplot, aes(x=Group.1, y=x,fill=Group.2))
g <- g + geom_bar(stat="identity")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + scale_fill_discrete(name="Auction House")
g <- g + scale_y_continuous(labels=comma)
g <- g + ylab("Total Number of Sales (Auction Lots)")
g <- g + xlab("Date")
g
#boxplot hammer prices (in three periods)
artplot <- artdata[,c("year","lnprice")]
artplot$period <- "2000-2003"
for(i in 1:nrow(artplot)) {
if(artplot[i,"year"] > 2003 & artplot[i,"year"] < 2008) { artplot[i,"period"] <- "2004-2007"}
if(artplot[i,"year"] > 2007 & artplot[i,"year"] < 2012) { artplot[i,"period"] <- "2008-2011"}
if(artplot[i,"year"] > 2011) { artplot[i,"period"] <- "2012-2015"}
}
artplot$period <- factor(artplot$period)
g <- ggplot(artplot, aes(x=period, y=lnprice, fill=period))
g <- g + stat_boxplot(geom = "errorbar", stat_params = list(width = 0.5))
g <- g + geom_boxplot() + guides(fill=FALSE)
g <- g + ylab("log of Price")
g <- g + xlab("")
g <- g + theme(axis.text.x = element_text(size=14))
g
#boxplot hammer prices (in three periods)
artplot <- artdata[,c("year","lnprice")]
artplot$period <- factor(artplot$year)
g <- ggplot(artplot, aes(x=period, y=lnprice, fill="#00BFC4"))
g <- g + stat_boxplot(geom = "errorbar", stat_params = list(width = 0.5))
g <- g + geom_boxplot() + guides(fill=FALSE)
g <- g + ylab("log of Hammer Prices")
g <- g + xlab("")
g
#Plot surface area and prices by medium
artplot <- subset(artdata)
g <- ggplot(artplot, aes(x=lnarea, y=lnprice))
g <- g + geom_point(size = 2, alpha = 0.5, aes(colour = med_code))
g <- g + ylab("log of Price")
g <- g + xlab("log of Area")
g <- g + labs(colour = "Medium")
g <- g + guides(colour = guide_legend(override.aes = list(size=5)))
g
dev.copy(png,"area.png")
dev.off()
install.packages("png")
install.packages("grid")
png(filename = "area.png", width = 480, height = 480)
?png
png(filename = "area.png", width = 480, height = 480)
#Plot surface area and prices by medium
artplot <- subset(artdata)
g <- ggplot(artplot, aes(x=lnarea, y=lnprice))
g <- g + geom_point(size = 2, alpha = 0.5, aes(colour = med_code))
g <- g + ylab("log of Price")
g <- g + xlab("log of Area")
g <- g + labs(colour = "Medium")
g <- g + guides(colour = guide_legend(override.aes = list(size=5)))
g
dev.off()
png(filename = "area.png", width = 480, height = 480)
#Plot surface area and prices by medium
artplot <- subset(artdata)
g <- ggplot(artplot, aes(x=lnarea, y=lnprice))
g <- g + geom_point(size = 2, alpha = 0.5, aes(colour = med_code))
g <- g + ylab("log of Price")
g <- g + xlab("log of Area")
g <- g + labs(colour = "Medium")
g <- g + guides(colour = guide_legend(override.aes = list(size=5)))
g
dev.off()
png(filename = "area2.png", width = 480, height = 480)
#Plot surface area and prices by medium
artplot <- subset(artdata)
g <- ggplot(artplot, aes(x=lnarea, y=lnprice))
g <- g + geom_point(size = 2, alpha = 0.5, aes(colour = med_code))
g <- g + ylab("log of Price")
g <- g + xlab("log of Area")
g <- g + labs(colour = "Medium")
g <- g + guides(colour = guide_legend(override.aes = list(size=5)))
g
dev.off()
png(filename = "area2.png", width = 480, height = 360)
#Plot surface area and prices by medium
artplot <- subset(artdata)
g <- ggplot(artplot, aes(x=lnarea, y=lnprice))
g <- g + geom_point(size = 2, alpha = 0.5, aes(colour = med_code))
g <- g + ylab("log of Price")
g <- g + xlab("log of Area")
g <- g + labs(colour = "Medium")
g <- g + guides(colour = guide_legend(override.aes = list(size=5)))
g
dev.off()
png(filename = "area2.png", width = 600, height = 360)
#Plot surface area and prices by medium
artplot <- subset(artdata)
g <- ggplot(artplot, aes(x=lnarea, y=lnprice))
g <- g + geom_point(size = 2, alpha = 0.5, aes(colour = med_code))
g <- g + ylab("log of Price")
g <- g + xlab("log of Area")
g <- g + labs(colour = "Medium")
g <- g + guides(colour = guide_legend(override.aes = list(size=5)))
g
dev.off()
#dev.copy(png,"area.png")
png(filename = "area2.png", width = 600, height = 360)
#Plot surface area and prices by medium
artplot <- subset(artdata)
g <- ggplot(artplot, aes(x=lnarea, y=lnprice))
g <- g + geom_point(size = 2, alpha = 0.5, aes(colour = med_code))
g <- g + ylab("log of Price")
g <- g + xlab("log of Surface Area")
g <- g + labs(colour = "Medium")
g <- g + guides(colour = guide_legend(override.aes = list(size=5)))
g
dev.off()
#Load pre-calculated dataset (for speed) from API_3.R
artdata <- read.csv("artdata_lnrep.csv", header=TRUE)
artdata$med_code <- factor(artdata$med_code, labels=c("NA","Drawing", "Watercolour", "Oil", "Acrylic", "Print/Woodcut",
"Mixed Media","Sculpture","Photography", "Other"))
artplot <- subset(artdata, med_code!="NA")
g <- ggplot(artplot, aes(x=lnrep, y=lnprice))
g <- g + geom_point(size = 2, alpha = 0.5, aes(colour = med_code))
g <- g + ylab("log of Price")
g <- g + xlab("log of Reputation")
g <- g + labs(colour = "Medium")
g <- g + guides(colour = guide_legend(override.aes = list(size=5)))
g
#Plot artist reputation index and prices
artplot <- subset(artdata, med_code!="NA")
g <- ggplot(artplot, aes(x=lnrep, y=lnprice))
g <- g + geom_point(size = 2, alpha = 0.5, aes(colour = med_code))
g <- g + ylab("log of Price")
g <- g + xlab("log of Artist Reputation")
g <- g + labs(colour = "Medium")
g <- g + guides(colour = guide_legend(override.aes = list(size=5)))
g
#dev.copy(png,"area.png")
png(filename = "reputation.png", width = 600, height = 360)
#Plot artist reputation index and prices
artplot <- subset(artdata, med_code!="NA")
g <- ggplot(artplot, aes(x=lnrep, y=lnprice))
g <- g + geom_point(size = 2, alpha = 0.5, aes(colour = med_code))
g <- g + ylab("log of Price")
g <- g + xlab("log of Artist Reputation")
g <- g + labs(colour = "Medium")
g <- g + guides(colour = guide_legend(override.aes = list(size=5)))
g
dev.off()
#dev.copy(png,"area.png")
png(filename = "reputation.png", width = 600, height = 360, res=120)
#Plot artist reputation index and prices
artplot <- subset(artdata, med_code!="NA")
g <- ggplot(artplot, aes(x=lnrep, y=lnprice))
g <- g + geom_point(size = 2, alpha = 0.5, aes(colour = med_code))
g <- g + ylab("log of Price")
g <- g + xlab("log of Artist Reputation")
g <- g + labs(colour = "Medium")
g <- g + guides(colour = guide_legend(override.aes = list(size=5)))
g
dev.off()
#dev.copy(png,"area.png")
png(filename = "area2.png", width = 600, height = 360, res=120)
#Plot surface area and prices by medium
artplot <- subset(artdata)
g <- ggplot(artplot, aes(x=lnarea, y=lnprice))
g <- g + geom_point(size = 2, alpha = 0.5, aes(colour = med_code))
g <- g + ylab("log of Price")
g <- g + xlab("log of Surface Area")
g <- g + labs(colour = "Medium")
g <- g + guides(colour = guide_legend(override.aes = list(size=5)))
g
dev.off()
#dev.copy(png,"area.png")
png(filename = "area2.png", width = 600, height = 360, res=60)
#Plot surface area and prices by medium
artplot <- subset(artdata)
g <- ggplot(artplot, aes(x=lnarea, y=lnprice))
g <- g + geom_point(size = 2, alpha = 0.5, aes(colour = med_code))
g <- g + ylab("log of Price")
g <- g + xlab("log of Surface Area")
g <- g + labs(colour = "Medium")
g <- g + guides(colour = guide_legend(override.aes = list(size=5)))
g
dev.off()
#dev.copy(png,"area.png")
png(filename = "area2.png", width = 600, height = 360)
#Plot surface area and prices by medium
artplot <- subset(artdata)
g <- ggplot(artplot, aes(x=lnarea, y=lnprice))
g <- g + geom_point(size = 2, alpha = 0.5, aes(colour = med_code))
g <- g + ylab("log of Price")
g <- g + xlab("log of Surface Area")
g <- g + labs(colour = "Medium")
g <- g + guides(colour = guide_legend(override.aes = list(size=5)))
g
dev.off()
#dev.copy(png,"area.png")
png(filename = "area2.png", width = 600, height = 360)
#Plot surface area and prices by medium
artplot <- subset(artdata, med_code!="NA")
g <- ggplot(artplot, aes(x=lnarea, y=lnprice))
g <- g + geom_point(size = 2, alpha = 0.5, aes(colour = med_code))
g <- g + ylab("log of Price")
g <- g + xlab("log of Surface Area")
g <- g + labs(colour = "Medium")
g <- g + guides(colour = guide_legend(override.aes = list(size=5)))
g
dev.off()
#dev.copy(png,"area.png")
png(filename = "area2.png", width = 600, height = 360)
#Plot surface area and prices by medium
artplot <- subset(artdata, med_code!="NA")
g <- ggplot(artplot, aes(x=lnarea, y=lnprice))
g <- g + geom_point(size = 2, alpha = 0.5, aes(colour = med_code))
g <- g + ylab("log of Price")
g <- g + xlab("log of Surface Area")
g <- g + labs(colour = "Medium")
g <- g + guides(colour = guide_legend(override.aes = list(size=5)))
g
dev.off()
#dev.copy(png,"area.png")
png(filename = "reputation.png", width = 600, height = 360, res=120)
#Plot artist reputation index and prices
artplot <- subset(artdata, med_code!="NA")
g <- ggplot(artplot, aes(x=lnrep, y=lnprice))
g <- g + geom_point(size = 2, alpha = 0.5, aes(colour = med_code))
g <- g + ylab("log of Price")
g <- g + xlab("log of Artist Reputation")
g <- g + labs(colour = "Medium")
g <- g + guides(colour = guide_legend(override.aes = list(size=5)))
g
dev.off()
#dev.copy(png,"area.png")
png(filename = "reputation.png", width = 600, height = 360)
#Plot artist reputation index and prices
artplot <- subset(artdata, med_code!="NA")
g <- ggplot(artplot, aes(x=lnrep, y=lnprice))
g <- g + geom_point(size = 2, alpha = 0.5, aes(colour = med_code))
g <- g + ylab("log of Price")
g <- g + xlab("log of Artist Reputation")
g <- g + labs(colour = "Medium")
g <- g + guides(colour = guide_legend(override.aes = list(size=5)))
g
dev.off()
