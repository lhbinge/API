g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(indicators[,c("Date","nonres.Q1")],indicators_late[,"nonres.Q1"])
colnames(indicator_plot) <- c("Date","nonres (excl. latecomers)","nonres (incl. latecomers)")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
pub <- read.csv("Building_BER_Published.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE)
View(pub)
indicator_plot <- cbind(indicators[,c("Date","total.Q2A")],indicators_late[,"total.Q2A"])
colnames(indicator_plot) <- c("Date","total (excl. latecomers)","total (incl. latecomers)")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(indicators[,c("Date","con_tot.Q1")],pub[,c("con_totalQ1")])
colnames(indicator_plot) <- c("Date","con_tot.Q1:Microdata","con_tot.Q1:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(building[,c("Date","con_tot.Q2A")],pub[,c("con_totalQ2A")])
colnames(indicator_plot) <- c("Date","con_tot.Q2A:Microdata","con_tot.Q2A:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(indicators[,c("Date","con_tot.Q2A")],pub[,c("con_totalQ2A")])
colnames(indicator_plot) <- c("Date","con_tot.Q2A:Microdata","con_tot.Q2A:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(building[,c("Date","con_tot.Q6")],pub[,c("con_totalQ6")])
colnames(indicator_plot) <- c("Date","con_tot.Q6:Microdata","con_tot.Q6:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(indicators[,c("Date","con_tot.Q6")],pub[,c("con_totalQ6")])
colnames(indicator_plot) <- c("Date","con_tot.Q6:Microdata","con_tot.Q6:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(indicators[,c("Date","con_tot.Q3A")],pub[,c("con_totalQ3A")])
colnames(indicator_plot) <- c("Date","con_tot.Q6:Microdata","con_tot.Q6:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(indicators[,c("Date","con_tot.Q4A")],pub[,c("con_totalQ4A")])
colnames(indicator_plot) <- c("Date","con_tot.Q6:Microdata","con_tot.Q6:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(indicators[,c("Date","con_tot.Q5A")],pub[,c("con_totalQ5A")])
colnames(indicator_plot) <- c("Date","con_tot.Q6:Microdata","con_tot.Q6:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(indicators[,c("Date","con_tot.Q6")],pub[,c("con_totalQ6")])
colnames(indicator_plot) <- c("Date","con_tot.Q6:Microdata","con_tot.Q6:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
bou <- function(BER.B=BER.B, datums=datums, laat="uit", alt=FALSE) {
# replace 1,2,3 (Up, Same, Down) responses with 1,0,-1
for(i in 7:16) {
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==2, 0)
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==3,-1)
}
if(alt==FALSE) {BER.B$Q6 <- replace(BER.B$Q6, BER.B$Q6==-1,0)} # replace -1 (Less keen) responses with 0
for(i in 17:20) {
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==1, 1)
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==2, 0)
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==3,-1)
}
if(laat=="uit") { BER.B <- BER.B[BER.B$Latecomer == FALSE | is.na(BER.B$Latecomer),]}
##================================##
## CALCULATE INDICATORS: BUILDING ##
##================================##
building <- BER.B[BER.B$sector=="5000" | BER.B$sector=="6000",]
res <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(res) <- paste("res",colnames(res),sep=".")
building <- BER.B[BER.B$sector=="5010" | BER.B$sector=="6010",]
nonres <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(nonres) <- paste("nonres",colnames(nonres),sep=".")
building <- BER.B[BER.B$sector=="5000" | BER.B$sector=="6000" | BER.B$sector=="5010" | BER.B$sector=="6010",]
total <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(total) <- paste("total",colnames(total),sep=".")
building <- BER.B[BER.B$sector=="5000",]
con_res <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(con_res) <- paste("con_res",colnames(con_res),sep=".")
building <- BER.B[BER.B$sector=="5010",]
con_nonres <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(con_nonres) <- paste("con_nonres",colnames(con_nonres),sep=".")
building <- BER.B[BER.B$sector=="5000" | BER.B$sector=="5010",]
con_tot <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(con_tot) <- paste("con_tot",colnames(con_tot),sep=".")
building <- BER.B[BER.B$sector=="6000",]
subcon_res <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(subcon_res) <- paste("subcon_res",colnames(subcon_res),sep=".")
building <- BER.B[BER.B$sector=="6010",]
subcon_nonres <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(subcon_nonres) <- paste("subcon_nonres",colnames(subcon_nonres),sep=".")
building <- BER.B[BER.B$sector=="6000" | BER.B$sector=="6010",]
subcon_tot <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(subcon_tot) <- paste("subcon_tot",colnames(subcon_tot),sep=".")
building <- BER.B[BER.B$sector=="5000" | BER.B$sector=="6000" | BER.B$sector=="5010" | BER.B$sector=="6010",]
wc <- building[building$region=="1",]
wc <- aggregate(wc[,(match("surveyQ",colnames(wc))+1):ncol(wc)], by=list(wc$surveyQ), FUN=mean, na.rm=TRUE)
colnames(wc) <- paste("wc",colnames(wc),sep=".")
kzn <- building[building$region=="5",]
kzn <- aggregate(kzn[,(match("surveyQ",colnames(kzn))+1):ncol(kzn)], by=list(kzn$surveyQ), FUN=mean, na.rm=TRUE)
colnames(kzn) <- paste("kzn",colnames(kzn),sep=".")
gp <- building[building$region=="6",]
gp <- aggregate(gp[,(match("surveyQ",colnames(gp))+1):ncol(gp)], by=list(gp$surveyQ), FUN=mean, na.rm=TRUE)
colnames(gp) <- paste("gp",colnames(gp),sep=".")
building <- cbind(res[,2:16],nonres[,2:16],total[,2:16],
con_res[,2:16],con_nonres[,2:16],con_tot[,2:16],
subcon_res[,2:16],subcon_nonres[,2:16],subcon_tot[,2:16],
wc[,2:16],kzn[,2:16],gp[,2:16], deparse.level = 1)
building <- building * 100
building <- cbind(Date=res$res.Group.1,building)
building <- merge(datums,building, by.x="Date", by.y="Date", all=TRUE)[,-2]
building$Date <- datums$Datum
return(building)
}
indicators_alt <- bou(BER.B, datums, "in", TRUE)
indicator_plot <- cbind(indicators[,c("Date","con_tot.Q6")],indicators_alt[,c("Date","con_tot.Q6")],pub[,c("con_totalQ6")])
colnames(indicator_plot) <- c("Date","con_tot.Q6:Microdata (Keener)","con_tot.Q6:Microdata (Normal)","con_tot.Q6:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(indicators[,c("Date","con_tot.Q6")],indicators_alt[,c("Date","con_tot.Q6")],pub[,c("con_totalQ6")])
View(indicator_plot)
indicator_plot <- cbind(indicators[,c("Date","con_tot.Q6")],indicators_alt[,c("con_tot.Q6")],pub[,c("con_totalQ6")])
colnames(indicator_plot) <- c("Date","con_tot.Q6:Microdata (Keener)","con_tot.Q6:Microdata (Normal)","con_tot.Q6:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicators_alt <- bou(BER.B, datums, "uit", TRUE)
indicator_plot <- cbind(indicators[,c("Date","con_tot.Q6")],indicators_alt[,c("con_tot.Q6")],pub[,c("con_totalQ6")])
colnames(indicator_plot) <- c("Date","con_tot.Q6:Microdata (Keener)","con_tot.Q6:Microdata (Normal)","con_tot.Q6:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(indicators[,c("Date","con_tot.Q7")],indicators_alt[,c("con_tot.Q7")],pub[,c("con_totalQ7")])
colnames(indicator_plot) <- c("Date","con_tot.Q7:Microdata (Keener)","con_tot.Q7:Microdata (Normal)","con_tot.Q7:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
View(BER.B)
bou <- function(BER.B=BER.B, datums=datums, laat="uit", alt=FALSE) {
# replace 1,2,3 (Up, Same, Down) responses with 1,0,-1
for(i in 7:16) {
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==2, 0)
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==3,-1)
}
if(alt==FALSE) {
BER.B$Q6 <- replace(BER.B$Q6, BER.B$Q6==-1,0) # replace -1 (Less keen) responses with 0
for(i in 17:20) {  #weighted
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==1, 0.67)
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==2, 0.33)
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==3, 0)
}
}
if(alt==TRUE) {
for(i in 17:20) {
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==1, 1)
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==2, 0.5)
BER.B[,i] <- replace(BER.B[,i], BER.B[,i]==3, 0)
}
}
if(laat=="uit") { BER.B <- BER.B[BER.B$Latecomer == FALSE | is.na(BER.B$Latecomer),]}
##================================##
## CALCULATE INDICATORS: BUILDING ##
##================================##
building <- BER.B[BER.B$sector=="5000" | BER.B$sector=="6000",]
res <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(res) <- paste("res",colnames(res),sep=".")
building <- BER.B[BER.B$sector=="5010" | BER.B$sector=="6010",]
nonres <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(nonres) <- paste("nonres",colnames(nonres),sep=".")
building <- BER.B[BER.B$sector=="5000" | BER.B$sector=="6000" | BER.B$sector=="5010" | BER.B$sector=="6010",]
total <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(total) <- paste("total",colnames(total),sep=".")
building <- BER.B[BER.B$sector=="5000",]
con_res <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(con_res) <- paste("con_res",colnames(con_res),sep=".")
building <- BER.B[BER.B$sector=="5010",]
con_nonres <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(con_nonres) <- paste("con_nonres",colnames(con_nonres),sep=".")
building <- BER.B[BER.B$sector=="5000" | BER.B$sector=="5010",]
con_tot <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(con_tot) <- paste("con_tot",colnames(con_tot),sep=".")
building <- BER.B[BER.B$sector=="6000",]
subcon_res <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(subcon_res) <- paste("subcon_res",colnames(subcon_res),sep=".")
building <- BER.B[BER.B$sector=="6010",]
subcon_nonres <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(subcon_nonres) <- paste("subcon_nonres",colnames(subcon_nonres),sep=".")
building <- BER.B[BER.B$sector=="6000" | BER.B$sector=="6010",]
subcon_tot <- aggregate(building[,(match("surveyQ",colnames(building))+1):ncol(building)], by=list(building$surveyQ), FUN=mean, na.rm=TRUE)
colnames(subcon_tot) <- paste("subcon_tot",colnames(subcon_tot),sep=".")
building <- BER.B[BER.B$sector=="5000" | BER.B$sector=="6000" | BER.B$sector=="5010" | BER.B$sector=="6010",]
wc <- building[building$region=="1",]
wc <- aggregate(wc[,(match("surveyQ",colnames(wc))+1):ncol(wc)], by=list(wc$surveyQ), FUN=mean, na.rm=TRUE)
colnames(wc) <- paste("wc",colnames(wc),sep=".")
kzn <- building[building$region=="5",]
kzn <- aggregate(kzn[,(match("surveyQ",colnames(kzn))+1):ncol(kzn)], by=list(kzn$surveyQ), FUN=mean, na.rm=TRUE)
colnames(kzn) <- paste("kzn",colnames(kzn),sep=".")
gp <- building[building$region=="6",]
gp <- aggregate(gp[,(match("surveyQ",colnames(gp))+1):ncol(gp)], by=list(gp$surveyQ), FUN=mean, na.rm=TRUE)
colnames(gp) <- paste("gp",colnames(gp),sep=".")
building <- cbind(res[,2:16],nonres[,2:16],total[,2:16],
con_res[,2:16],con_nonres[,2:16],con_tot[,2:16],
subcon_res[,2:16],subcon_nonres[,2:16],subcon_tot[,2:16],
wc[,2:16],kzn[,2:16],gp[,2:16], deparse.level = 1)
building <- building * 100
building <- cbind(Date=res$res.Group.1,building)
building <- merge(datums,building, by.x="Date", by.y="Date", all=TRUE)[,-2]
building$Date <- datums$Datum
return(building)
}
##=============================
indicators <- bou(BER.B, datums, "uit", FALSE)
indicators_alt <- bou(BER.B, datums, "uit", TRUE)
indicator_plot <- cbind(indicators[,c("Date","con_tot.Q6")],indicators_alt[,c("con_tot.Q6")],pub[,c("con_totalQ6")])
colnames(indicator_plot) <- c("Date","con_tot.Q6:Microdata (Keener)","con_tot.Q6:Microdata (Normal)","con_tot.Q6:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(indicators[,c("Date","con_tot.Q7")],indicators_alt[,c("con_tot.Q7")],pub[,c("con_totalQ7")])
colnames(indicator_plot) <- c("Date","con_tot.Q7:Microdata (Keener)","con_tot.Q7:Microdata (Normal)","con_tot.Q7:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(indicators[,c("Date","con_tot.Q7")],indicators_alt[,c("con_tot.Q7")],pub[,c("con_totalQ7")])
colnames(indicator_plot) <- c("Date","con_tot.Q7:Microdata (0.67;0.33;0)","con_tot.Q7:Microdata (1;0.5;0)","con_tot.Q7:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(indicators[,c("Date","con_tot.Q8")],indicators_alt[,c("con_tot.Q8")],pub[,c("con_totalQ8")])
colnames(indicator_plot) <- c("Date","con_tot.Q8:Microdata (0.67;0.33;0)","con_tot.Q8:Microdata (1;0.5;0)","con_tot.Q8:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(indicators[,c("Date","con_tot.Q9")],indicators_alt[,c("con_tot.Q9")],pub[,c("con_totalQ9")])
colnames(indicator_plot) <- c("Date","con_tot.Q9:Microdata (0.67;0.33;0)","con_tot.Q9:Microdata (1;0.5;0)","con_tot.Q9:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(indicators[,c("Date","con_tot.Q10")],indicators_alt[,c("con_tot.Q10")],pub[,c("con_totalQ10")])
colnames(indicator_plot) <- c("Date","con_tot.Q10:Microdata (0.67;0.33;0)","con_tot.Q10:Microdata (1;0.5;0)","con_tot.Q10:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
##
View(indicators)
indicator_plot <- cbind(indicators[,c("Date","subcon_tot.Q10")],indicators_alt[,c("subcon_tot.Q10")],pub[,c("subcon_totalQ10")])
colnames(indicator_plot) <- c("Date","subcon_tot.Q10:Microdata (0.67;0.33;0)","subcon_tot.Q10:Microdata (1;0.5;0)","subcon_tot.Q10:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(indicators[,c("Date","subcon_tot.Q6")],indicators_alt[,c("subcon_tot.Q6")],pub[,c("subcon_totalQ6")])
colnames(indicator_plot) <- c("Date","subcon_tot.Q10:Microdata (0.67;0.33;0)","subcon_tot.Q10:Microdata (1;0.5;0)","subcon_tot.Q10:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(indicators[,c("Date","subcon_tot.Q6")],indicators_alt[,c("subcon_tot.Q6")],pub[,c("subcon_totalQ6")])
colnames(indicator_plot) <- c("Date","subcon_tot.Q6:Microdata (Keener)","subcon_tot.Q6:Microdata (Normal)","subcon_tot.Q6:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(indicators[,c("Date","con_tot.Q3A")],pub[,c("con_totalQ3A")])
colnames(indicator_plot) <- c("Date","con_tot.Q2A:Microdata","con_tot.Q2A:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
indicator_plot <- cbind(indicators[,c("Date","con_tot.Q2A")],pub[,c("con_totalQ2A")])
colnames(indicator_plot) <- c("Date","con_tot.Q2A:Microdata","con_tot.Q2A:Published")
indicator_plot <- melt(indicator_plot, id="Date")  # convert to long format
g <- ggplot(data=indicator_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Indicator")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g <- g + theme(legend.position="bottom")
g
##=====================##
## READING IN THE DATA ##
##=====================##
suppressMessages(library(zoo))
suppressMessages(library(ggplot2))
suppressMessages(library(plyr))
suppressMessages(library(dplyr))
suppressMessages(library(reshape2))
suppressMessages(library(stargazer))
suppressMessages(library(micEcon))
suppressMessages(library(quantreg))
suppressMessages(library(McSpatial))
suppressMessages(library(quantmod))
suppressMessages(library(xtable))
suppressMessages(library(scales))
suppressMessages(library(tseries))
suppressMessages(library(urca))
suppressMessages(library(mFilter))
setwd("C:\\Users\\Laurie\\OneDrive\\Documents\\BING\\Art Price Index\\R Code")
artdata <- read.csv("Auction database.csv", header=TRUE, sep=",",na.strings = "", skipNul = TRUE,
colClasses=c("character","numeric","numeric","numeric","numeric","factor","factor","factor","character",
"factor","factor","factor","character","factor","factor","factor","numeric","character",
"numeric","numeric","numeric","numeric","numeric","numeric"))
##===================##
## CLEANING THE DATA ##
##===================##
artdata$date <- as.Date(artdata$date)
artdata$med_code <- factor(artdata$med_code, labels=c("Drawing", "Watercolour", "Oil", "Acrylic", "Print/Woodcut",
"Mixed Media","Sculpture","Photography", "Other"))
artdata$ah_code <- factor(artdata$ah_code, labels=c("5th Avenue","Ashbeys","Bernardi","Bonhams","Russell Kaplan",
"Stephan Welz","Strauss","Christies"))
artdata$timedummy <- factor(as.yearqtr(artdata$date, "%Y-%m-%d"))
artdata$lnprice <- log(artdata$price)
artdata$lnarea <- log(artdata$area)
artdata$lnarea2 <- artdata$lnarea*artdata$lnarea
#inteaction term: sculptures often only reported with 1 dimension (height)
artdata$lnsculpt_area <- ifelse(artdata$med_code=="Sculpture", artdata$lnarea, 0)
artdata$counter <- as.numeric(artdata$timedummy)
##----------------------
##Rank Artists by Volume
##----------------------
#Rank by Total Volume (all)
rankings <- count(artdata, artist)
rankings$rank_all <- dense_rank(desc(rankings$n))    #rank by density, with no gaps (ties = equal)
rankings$rank_total <- row_number(desc(rankings$n))  #equivalent to rank(ties.method = "first")
rankings$n <- NULL
artdata <- merge(artdata, rankings, by.x="artist", by.y="artist",all.x=TRUE)
