artdata$counter <- as.numeric(artdata$timedummy)
#source(themes)
#source(materials)
#change reference category with relevel()
#artdata$ah_code <- relevel(artdata$ah_code, ref = "Stephan Welz & Co")
#artdata$artist <- relevel(artdata$artist, ref = "Battiss, Walter Whall")
#artdata$med_code <- relevel(artdata$med_code, ref = "Oil")
#head(artdata)
#str(artdata)
##----------------------
##Rank Artists by Volume
##----------------------
#Rank by Total Volume (all)
rankings <- count(artdata, artist)
rankings$rank_all <- dense_rank(desc(rankings$n))    #rank by density, with no gaps between ranks
#rankings$rank_all <- min_rank(desc(rankings$n))     #equivalent to rank(ties.method = "min")
rankings$rank_total <- row_number(desc(rankings$n))  #equivalent to rank(ties.method = "first")
rankings$n <- NULL
#rankings$rank_all <- factor(rankings$rank_all, labels=c)
#artdata <- merge(artdata, tel, by.x="artist", by.y="artist")
##Rank by Rolling 5-year window
for(i in 1:11) {
teller <- 1998+i
som <- count(artdata[(artdata$year>teller & artdata$year<(teller+6)),], artist)
som$rank_new <- dense_rank(desc(som$n))
# the alternative is to rank by row_number or min_rank
som$n <- NULL
colnames(som) <- c("artist", paste0("rank_", i))
rankings <- merge(rankings, som, by.x="artist", by.y="artist",all.x=TRUE)
}
#Rank Update
som <- count(artdata[(artdata$counter>42 & artdata$counter<63),], artist)
som$rank_new <- dense_rank(desc(som$n))  # rank by equivalent to rank(ties.method = "first")
# the alternative is to rank by row_number or min_rank
som$n <- NULL
colnames(som) <- c("artist", "rank_update")
rankings <- merge(rankings, som, by.x="artist", by.y="artist",all.x=TRUE)
##Rank by Annual Volume
for(i in 1:16) {
teller <- 1999+i
som <- count(artdata[(artdata$year==teller),], artist)
som$rank_new <- dense_rank(desc(som$n))
# the alternative is to rank by row_number or min_rank
som$n <- NULL
colnames(som) <- c("artist", paste0("rank_y", teller))
rankings <- merge(rankings, som, by.x="artist", by.y="artist",all.x=TRUE)
}
##Rank by 2-year Volume
for(i in 1:8) {
teller <- 1998+(i*2-1)
som <- count(artdata[(artdata$year>teller & artdata$year<(teller+3)),], artist)
som$rank_new <- dense_rank(desc(som$n))
# the alternative is to rank by row_number or min_rank
som$n <- NULL
colnames(som) <- c("artist", paste0("rank_a", i))
rankings <- merge(rankings, som, by.x="artist", by.y="artist",all.x=TRUE)
}
artdata <- merge(artdata, rankings, by.x="artist", by.y="artist",all.x=TRUE)
View(artdata)
list_expl_vars=c("lnarea","ah_code","med_code","lnsculpt_area","dum_signed","dum_dated",
"nr_works","artist","timedummy")
expl_vars <- as.formula(paste("lnprice~",paste(list_expl_vars,collapse="+")))
#-------------------
# FULL SAMPLE MODEL
#-------------------
source("full_model.R")
time_results <- full_model(artdata, list_expl_vars)
View(time_results)
source("rolling_model.R")
rolling <- rolling_model(artdata, list_expl_vars)
View(rolling)
source("overlap1y_model.R")
overlap <- overlap1y_model(artdata, list_expl_vars)
source("overlap2y_model.R")
overlap2 <- overlap2y_model(artdata, list_expl_vars)
#png(file = "Adjacent Period.png", width=600,height=360)
dum_indices <- rolling[,c(1,2,15)]
dum_indices <- cbind(dum_indices,Adjacent_1year=overlap[,19])
dum_indices <- cbind(dum_indices,Adjacent_2year=overlap2[,11])
View(dum_indices)
index_plot <- melt(index_plot, id="Date")  # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_point(size = 3)
g <- g + geom_line()
g <- g + ylab("Index")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.position="bottom") + theme(legend.title=element_blank())
g
index_plot <- melt(dum_indices, id="Date")  # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_point(size = 3)
g <- g + geom_line()
g <- g + ylab("Index")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.position="bottom") + theme(legend.title=element_blank())
g
all_indices <- cbind(dum_indices, rep_indices)
View(all_indices)
all_indices <- all_indices[,-6]
index_plot <- melt(all_indices, id="Date")  # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_point(size = 3)
g <- g + geom_line()
g <- g + ylab("Index")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.position="bottom") + theme(legend.title=element_blank())
g
g <- ggplot(data=index_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_point(size = 3)
g <- g + geom_line()
g <- g + ylab("Index")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g
View(rep_rolling)
View(rep_rolling)
rep_indices <- rep_rolling[,c(1,2)]
colnames(rep_indices) <- c("Date","Rep_Full")
#rep_indices <- rolling[,c(1,2,15)]
#rep_indices <- cbind(rep_indices,Index_Adjacent=overlap[,19])
#rep_indices <- cbind(rep_indices,Index_Adj2=overlap2[,11])
#rep_indices <- cbind(rep_indices,RepIndex_Full=rep_results[,2])
rep_indices <- cbind(rep_indices,RepAdjacent_1y=rep_overlap1[,19])
rep_indices <- cbind(rep_indices,RepAdjacent_2y=rep_overlap2[,11])
rep_indices <- cbind(rep_indices,RepRolling=rep_rolling[,15])
all_indices <- cbind(dum_indices, rep_indices[,-1])
index_plot <- melt(all_indices[,c(-)], id="Date")  # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_point(size = 3)
g <- g + geom_line()
g <- g + ylab("Index")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g
index_plot <- melt(all_indices[,c(1,2,6)], id="Date")  # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_point(size = 3)
g <- g + geom_line()
g <- g + ylab("Index")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g
index_plot <- melt(all_indices[,c(1,3,9)], id="Date")  # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_point(size = 3)
g <- g + geom_line()
g <- g + ylab("Index")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g
index_plot <- melt(all_indices[,c(1,4,7)], id="Date")  # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_point(size = 3)
g <- g + geom_line()
g <- g + ylab("Index")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g
index_plot <- melt(all_indices[,c(1,5,8)], id="Date")  # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_point(size = 3)
g <- g + geom_line()
g <- g + ylab("Index")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank())
g
list_expl_vars <- c("lnarea","ah_code","med_code","lnsculpt_area","dum_signed", "dum_dated",
"nr_works","lnrep","timedummy")
expl_vars <- as.formula(paste("lnprice~",paste(list_expl_vars,collapse="+")))
quant <- rq(expl_vars, tau=c(0.10,0.25,0.5,0.75,0.90), data=artdata)
quant_results <- coef(quant)[grepl("time", rownames(coef(quant))),1:5]
quant_results <- as.data.frame(quant_results)
quant_results <- exp(quant_results)*100
index_plot <- rolling[,c(1,2)]
index_plot <- cbind(index_plot,quant_results)
index_plot <- index_plot[,-2]
index_plot <- melt(index_plot, id="Date")  # convert to long format
#png(file = "Quantile.png", width=600,height=360)
g <- ggplot(data=index_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_point(size = 3)
g <- g + geom_line()
g <- g + ylab("Index")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.position="bottom") + theme(legend.title=element_blank())
g
View(index_plot)
rep <- list()
rep[[1]] <- 1
for(i in 2:(max(artdata$rank_total))) {
##maak dit 'n function waaroor jy sapply?????
list_vars <- c(list_expl_vars,"price")
#geometric average of paintings by artist y
y <- subset(artdata[,list_vars], artdata$rank_total==1)
y <- y[!rowSums(is.na(y)), ]
py <-  exp(mean(log(y$price)))
#py <- max(cumprod(y$price^(1/nrow(y))))
ym1 <- subset(artdata[,list_vars], artdata$rank_total==i)
ym1 <- ym1[!rowSums(is.na(ym1)), ]
pym1 <-  exp(mean(log(ym1$price)))
#pym1 <- max(cumprod(ym1$price^(1/nrow(ym1))))
sbx <- 0
#average of characteristics time implicit attribute price
xy <- mean(y$lnarea)
xym1 <- mean(ym1$lnarea)
b <- summary(model_100)$coefficients[grepl("lnarea", rownames(summary(model_100)$coefficients)),1]
bx <- b*(xym1-xy)
sbx <- sbx + bx
xy <- mean(y$lnsculpt_area)
xym1 <- mean(ym1$lnsculpt_area)
b <- summary(model_100)$coefficients[grepl("lnsculpt_area", rownames(summary(model_100)$coefficients)),1]
bx <- b*(xym1-xy)
sbx <- sbx + bx
xy <- mean(y$nr_works)
xym1 <- mean(ym1$nr_works)
b <- summary(model_100)$coefficients[grepl("nr_works", rownames(summary(model_100)$coefficients)),1]
bx <- b*(xym1-xy)
sbx <- sbx + bx
xy <- mean(as.numeric(y$dum_signed)-1)
xym1 <- mean(as.numeric(ym1$dum_signed)-1)
b <- summary(model_100)$coefficients[grepl("dum_signed", rownames(summary(model_100)$coefficients)),1]
bx <- b*(xym1-xy)
sbx <- sbx + bx
xy <- mean(as.numeric(y$dum_dated)-1)
xym1 <- mean(as.numeric(ym1$dum_dated)-1)
b <- summary(model_100)$coefficients[grepl("dum_dated", rownames(summary(model_100)$coefficients)),1]
bx <- b*(xym1-xy)
sbx <- sbx + bx
auc_house <- c("Ashbeys","Bernardi","Bonhams","Russell Kaplan","Stephan Welz","Strauss","Christies")
for(j in auc_house) {
xy <- mean(as.numeric(y$ah_code==j))
xym1 <- mean(as.numeric(ym1$ah_code==j))
b <- summary(model_100)$coefficients[grepl(j, rownames(summary(model_100)$coefficients)),1]
bx <- b*(xym1-xy)
sbx <- sbx + bx
}
medium <- c("Watercolour","Oil","Acrylic","Print/Woodcut","Mixed Media","Sculpture","Photography","Other")
for(k in medium) {
xy <- mean(as.numeric(y$med_code==k))
xym1 <- mean(as.numeric(ym1$med_code==k))
b <- summary(model_100)$coefficients[grepl(k, rownames(summary(model_100)$coefficients)),1]
bx <- b*(xym1-xy)
sbx <- sbx + bx
}
rep[i] <- (pym1/py)/exp(sbx)
}
#reputation <- as.matrix(rep)
for(i in 1:(max(artdata$rank_total))) {
artdata$reputation[(artdata$rank_total==i)] <- rep[i]
}
artdata$reputation <- as.numeric(unlist(artdata$reputation))
artdata$lnrep <- log(artdata$reputation)
g <- ggplot(artdata, aes(x=lnrep, y=lnprice))
g <- g + geom_point(size = 2, alpha = 0.5, aes(colour = med_code))
g <- g + geom_smooth()
g <- g + ylab("log of Price")
g <- g + xlab("log of Reputation")
g
#The result is an index representing average price per artist adjusted for quality,
#relative to the base artist.
#The values of this index can proxy for artistic value.
#It can replace the artist dummies as a continuous variable in a second regression of equation 1.
#In this regression nearly the full sample is used, leading to a better representation of
#the total art market.
list_expl_vars <- c("lnarea","ah_code","med_code","lnsculpt_area","dum_signed","dum_dated",
"nr_works","lnrep","timedummy")
#modeldata <- subset(artdata, rank_all<max(rank_all))
source("full_model.R")
rep_results <- full_model(artdata,list_expl_vars)
source("overlap1y_model.R")
rep_overlap1 <- overlap1y_model(artdata,list_expl_vars)
source("overlap2y_model.R")
rep_overlap2 <- overlap2y_model(artdata,list_expl_vars)
source("rolling_model.R")
rep_rolling <- rolling_model(artdata,list_expl_vars)
rep_indices <- rep_rolling[,c(1,2)]
colnames(rep_indices) <- c("Date","Rep_Full")
rep_indices <- cbind(rep_indices,RepAdjacent_1y=rep_overlap1[,19])
rep_indices <- cbind(rep_indices,RepAdjacent_2y=rep_overlap2[,11])
rep_indices <- cbind(rep_indices,RepRolling=rep_rolling[,15])
#png(file = "Reputation.png", width=600,height=360)
index_plot <- melt(rep_indices, id="Date")  # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_point(size = 3)
g <- g + geom_line()
g <- g + ylab("Index")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.position="bottom") + theme(legend.title=element_blank())
g
View(artdata)
rep <- list()
rep[[1]] <- 1
for(i in 2:(max(artdata$rank_total))) {
##maak dit 'n function waaroor jy sapply?????
list_vars <- c(list_expl_vars,"price")
#geometric average of paintings by artist y
y <- subset(artdata[,list_vars], artdata$rank_total==1)
y <- y[!rowSums(is.na(y)), ]
py <-  exp(mean(log(y$price)))
#py <- max(cumprod(y$price^(1/nrow(y))))
ym1 <- subset(artdata[,list_vars], artdata$rank_total==i)
ym1 <- ym1[!rowSums(is.na(ym1)), ]
pym1 <-  exp(mean(log(ym1$price)))
#pym1 <- max(cumprod(ym1$price^(1/nrow(ym1))))
sbx <- 0
#average of characteristics time implicit attribute price
xy <- mean(y$lnarea)
xym1 <- mean(ym1$lnarea)
b <- summary(model_100)$coefficients[grepl("lnarea", rownames(summary(model_100)$coefficients)),1]
bx <- b*(xym1-xy)
sbx <- sbx + bx
xy <- mean(y$lnsculpt_area)
xym1 <- mean(ym1$lnsculpt_area)
b <- summary(model_100)$coefficients[grepl("lnsculpt_area", rownames(summary(model_100)$coefficients)),1]
bx <- b*(xym1-xy)
sbx <- sbx + bx
xy <- mean(y$nr_works)
xym1 <- mean(ym1$nr_works)
b <- summary(model_100)$coefficients[grepl("nr_works", rownames(summary(model_100)$coefficients)),1]
bx <- b*(xym1-xy)
sbx <- sbx + bx
xy <- mean(as.numeric(y$dum_signed)-1)
xym1 <- mean(as.numeric(ym1$dum_signed)-1)
b <- summary(model_100)$coefficients[grepl("dum_signed", rownames(summary(model_100)$coefficients)),1]
bx <- b*(xym1-xy)
sbx <- sbx + bx
xy <- mean(as.numeric(y$dum_dated)-1)
xym1 <- mean(as.numeric(ym1$dum_dated)-1)
b <- summary(model_100)$coefficients[grepl("dum_dated", rownames(summary(model_100)$coefficients)),1]
bx <- b*(xym1-xy)
sbx <- sbx + bx
auc_house <- c("Ashbeys","Bernardi","Bonhams","Russell Kaplan","Stephan Welz","Strauss","Christies")
for(j in auc_house) {
xy <- mean(as.numeric(y$ah_code==j))
xym1 <- mean(as.numeric(ym1$ah_code==j))
b <- summary(model_100)$coefficients[grepl(j, rownames(summary(model_100)$coefficients)),1]
bx <- b*(xym1-xy)
sbx <- sbx + bx
}
medium <- c("Watercolour","Oil","Acrylic","Print/Woodcut","Mixed Media","Sculpture","Photography","Other")
for(k in medium) {
xy <- mean(as.numeric(y$med_code==k))
xym1 <- mean(as.numeric(ym1$med_code==k))
b <- summary(model_100)$coefficients[grepl(k, rownames(summary(model_100)$coefficients)),1]
bx <- b*(xym1-xy)
sbx <- sbx + bx
}
rep[i] <- (pym1/py)/exp(sbx)
}
modeldata <- subset(artdata, artdata$rank_all<101)
list_expl_vars <- c("lnarea","ah_code","med_code","lnsculpt_area","dum_signed", "dum_dated",
"nr_works","artist","timedummy")
expl_vars <- as.formula(paste("lnprice~",paste(list_expl_vars,collapse="+")))
model_100 <- lm(expl_vars, data=modeldata)
rep <- list()
rep[[1]] <- 1
for(i in 2:(max(artdata$rank_total))) {
##maak dit 'n function waaroor jy sapply?????
list_vars <- c(list_expl_vars,"price")
#geometric average of paintings by artist y
y <- subset(artdata[,list_vars], artdata$rank_total==1)
y <- y[!rowSums(is.na(y)), ]
py <-  exp(mean(log(y$price)))
#py <- max(cumprod(y$price^(1/nrow(y))))
ym1 <- subset(artdata[,list_vars], artdata$rank_total==i)
ym1 <- ym1[!rowSums(is.na(ym1)), ]
pym1 <-  exp(mean(log(ym1$price)))
#pym1 <- max(cumprod(ym1$price^(1/nrow(ym1))))
sbx <- 0
#average of characteristics time implicit attribute price
xy <- mean(y$lnarea)
xym1 <- mean(ym1$lnarea)
b <- summary(model_100)$coefficients[grepl("lnarea", rownames(summary(model_100)$coefficients)),1]
bx <- b*(xym1-xy)
sbx <- sbx + bx
xy <- mean(y$lnsculpt_area)
xym1 <- mean(ym1$lnsculpt_area)
b <- summary(model_100)$coefficients[grepl("lnsculpt_area", rownames(summary(model_100)$coefficients)),1]
bx <- b*(xym1-xy)
sbx <- sbx + bx
xy <- mean(y$nr_works)
xym1 <- mean(ym1$nr_works)
b <- summary(model_100)$coefficients[grepl("nr_works", rownames(summary(model_100)$coefficients)),1]
bx <- b*(xym1-xy)
sbx <- sbx + bx
xy <- mean(as.numeric(y$dum_signed)-1)
xym1 <- mean(as.numeric(ym1$dum_signed)-1)
b <- summary(model_100)$coefficients[grepl("dum_signed", rownames(summary(model_100)$coefficients)),1]
bx <- b*(xym1-xy)
sbx <- sbx + bx
xy <- mean(as.numeric(y$dum_dated)-1)
xym1 <- mean(as.numeric(ym1$dum_dated)-1)
b <- summary(model_100)$coefficients[grepl("dum_dated", rownames(summary(model_100)$coefficients)),1]
bx <- b*(xym1-xy)
sbx <- sbx + bx
auc_house <- c("Ashbeys","Bernardi","Bonhams","Russell Kaplan","Stephan Welz","Strauss","Christies")
for(j in auc_house) {
xy <- mean(as.numeric(y$ah_code==j))
xym1 <- mean(as.numeric(ym1$ah_code==j))
b <- summary(model_100)$coefficients[grepl(j, rownames(summary(model_100)$coefficients)),1]
bx <- b*(xym1-xy)
sbx <- sbx + bx
}
medium <- c("Watercolour","Oil","Acrylic","Print/Woodcut","Mixed Media","Sculpture","Photography","Other")
for(k in medium) {
xy <- mean(as.numeric(y$med_code==k))
xym1 <- mean(as.numeric(ym1$med_code==k))
b <- summary(model_100)$coefficients[grepl(k, rownames(summary(model_100)$coefficients)),1]
bx <- b*(xym1-xy)
sbx <- sbx + bx
}
rep[i] <- (pym1/py)/exp(sbx)
}
for(i in 1:(max(artdata$rank_total))) {
artdata$reputation[(artdata$rank_total==i)] <- rep[i]
}
artdata$reputation <- as.numeric(unlist(artdata$reputation))
artdata$lnrep <- log(artdata$reputation)
g <- ggplot(artdata, aes(x=lnrep, y=lnprice))
g <- g + geom_point(size = 2, alpha = 0.5, aes(colour = med_code))
g <- g + geom_smooth()
g <- g + ylab("log of Price")
g <- g + xlab("log of Reputation")
g
list_expl_vars <- c("lnarea","ah_code","med_code","lnsculpt_area","dum_signed","dum_dated",
"nr_works","lnrep","timedummy")
#modeldata <- subset(artdata, rank_all<max(rank_all))
source("full_model.R")
rep_results <- full_model(artdata,list_expl_vars)
source("overlap1y_model.R")
rep_overlap1 <- overlap1y_model(artdata,list_expl_vars)
source("overlap2y_model.R")
rep_overlap2 <- overlap2y_model(artdata,list_expl_vars)
source("rolling_model.R")
rep_rolling <- rolling_model(artdata,list_expl_vars)
rep_indices <- rep_rolling[,c(1,2)]
colnames(rep_indices) <- c("Date","Rep_Full")
rep_indices <- cbind(rep_indices,RepAdjacent_1y=rep_overlap1[,19])
rep_indices <- cbind(rep_indices,RepAdjacent_2y=rep_overlap2[,11])
rep_indices <- cbind(rep_indices,RepRolling=rep_rolling[,15])
#png(file = "Reputation.png", width=600,height=360)
index_plot <- melt(rep_indices, id="Date")  # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_point(size = 3)
g <- g + geom_line()
g <- g + ylab("Index")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.position="bottom") + theme(legend.title=element_blank())
g
list_expl_vars <- c("lnarea","ah_code","med_code","lnsculpt_area","dum_signed", "dum_dated",
"nr_works","lnrep","timedummy")
expl_vars <- as.formula(paste("lnprice~",paste(list_expl_vars,collapse="+")))
quant <- rq(expl_vars, tau=c(0.10,0.25,0.5,0.75,0.90), data=artdata)
quant_results <- coef(quant)[grepl("time", rownames(coef(quant))),1:5]
quant_results <- as.data.frame(quant_results)
quant_results <- exp(quant_results)*100
index_plot <- rolling[,c(1,2)]
index_plot <- cbind(index_plot,quant_results)
index_plot <- index_plot[,-2]
index_plot <- melt(index_plot, id="Date")  # convert to long format
#png(file = "Quantile.png", width=600,height=360)
g <- ggplot(data=index_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_point(size = 3)
g <- g + geom_line()
g <- g + ylab("Index")
g <- g + xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.position="bottom") + theme(legend.title=element_blank())
g
#check for duplicates (how many)
sum(duplicated(artdata[,c("artist","title","med_code","area","dum_signed","dum_dated")]))
allDup <- function (value)
{
duplicated(value) | duplicated(value, fromLast = TRUE)
}
rsartdata <- artdata[allDup(artdata[,c("artist","title","med_code","area","dum_signed","dum_dated")]),]
#rsartdata <- transform(rsartdata,id=as.numeric(factor(title)))
rsartdata <- transform(rsartdata, id = as.numeric(interaction(artist,factor(title),med_code,factor(area),factor(dum_signed),
factor(dum_dated), drop=TRUE)))
repdata <- repsaledata(rsartdata$lnprice,rsartdata$counter,rsartdata$id)
repeatsales <- repsale(repdata$price0,repdata$time0,repdata$price1,repdata$time1,mergefirst=2,
graph=TRUE,graph.conf=TRUE,conf=.95)
repeatsales_index <- exp(as.data.frame(repeatsales$pindex))*100
sum(duplicated(artdata[,c("artist","title","med_code","area","dum_signed","dum_dated")]))
allDup <- function(value) {
duplicated(value) | duplicated(value, fromLast = TRUE)
}
rsartdata <- artdata[allDup(artdata[,c("artist","title","med_code","area","dum_signed","dum_dated")]),]
rsartdata <- transform(rsartdata, id = as.numeric(interaction(artist,factor(title),med_code,factor(area),factor(dum_signed),
factor(dum_dated), drop=TRUE)))
repdata <- repsaledata(rsartdata$lnprice,rsartdata$counter,rsartdata$id)
repeatsales <- repsale(repdata$price0,repdata$time0,repdata$price1,repdata$time1,mergefirst=2,
graph=TRUE,graph.conf=TRUE,conf=.95)
repeatsales_index <- exp(as.data.frame(repeatsales$pindex))*100
View(repeatsales_index)
repeatsales <- repsale(repdata$price0,repdata$time0,repdata$price1,repdata$time1,mergefirst=1,
graph=TRUE,graph.conf=TRUE,conf=.95)
repeatsales_index <- exp(as.data.frame(repeatsales$pindex))*100
repeatsales <- repsale(repdata$price0,repdata$time0,repdata$price1,repdata$time1,mergefirst=3,
graph=TRUE,graph.conf=TRUE,conf=.95)
repeatsales_index <- exp(as.data.frame(repeatsales$pindex))*100
